// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: tensorflow/core/framework/function.proto

package framework

import proto "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// A library is a set of named functions.
type FunctionDefLibrary struct {
	Function []*FunctionDef `protobuf:"bytes,1,rep,name=function" json:"function,omitempty"`
	Gradient []*GradientDef `protobuf:"bytes,2,rep,name=gradient" json:"gradient,omitempty"`
}

func (m *FunctionDefLibrary) Reset()                    { *m = FunctionDefLibrary{} }
func (m *FunctionDefLibrary) String() string            { return proto.CompactTextString(m) }
func (*FunctionDefLibrary) ProtoMessage()               {}
func (*FunctionDefLibrary) Descriptor() ([]byte, []int) { return fileDescriptorFunction, []int{0} }

func (m *FunctionDefLibrary) GetFunction() []*FunctionDef {
	if m != nil {
		return m.Function
	}
	return nil
}

func (m *FunctionDefLibrary) GetGradient() []*GradientDef {
	if m != nil {
		return m.Gradient
	}
	return nil
}

// A function can be instantiated when the runtime can bind every attr
// with a value. When a GraphDef has a call to a function, it must
// have binding for every attr defined in the signature.
//
// TODO(zhifengc):
//   * device spec, etc.
type FunctionDef struct {
	// The definition of the function's name, arguments, return values,
	// attrs etc.
	Signature *OpDef `protobuf:"bytes,1,opt,name=signature" json:"signature,omitempty"`
	// Attributes specific to this function definition.
	Attr map[string]*AttrValue `protobuf:"bytes,5,rep,name=attr" json:"attr,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value"`
	// By convention, "op" in node_def is resolved by consulting with a
	// user-defined library first. If not resolved, "func" is assumed to
	// be a builtin op.
	NodeDef []*NodeDef `protobuf:"bytes,3,rep,name=node_def,json=nodeDef" json:"node_def,omitempty"`
	// A mapping from the output arg names from `signature` to the
	// outputs from `node_def` that should be returned by the function.
	Ret map[string]string `protobuf:"bytes,4,rep,name=ret" json:"ret,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (m *FunctionDef) Reset()                    { *m = FunctionDef{} }
func (m *FunctionDef) String() string            { return proto.CompactTextString(m) }
func (*FunctionDef) ProtoMessage()               {}
func (*FunctionDef) Descriptor() ([]byte, []int) { return fileDescriptorFunction, []int{1} }

func (m *FunctionDef) GetSignature() *OpDef {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *FunctionDef) GetAttr() map[string]*AttrValue {
	if m != nil {
		return m.Attr
	}
	return nil
}

func (m *FunctionDef) GetNodeDef() []*NodeDef {
	if m != nil {
		return m.NodeDef
	}
	return nil
}

func (m *FunctionDef) GetRet() map[string]string {
	if m != nil {
		return m.Ret
	}
	return nil
}

// GradientDef defines the gradient function of a function defined in
// a function library.
//
// A gradient function g (specified by gradient_func) for a function f
// (specified by function_name) must follow the following:
//
// The function 'f' must be a numerical function which takes N inputs
// and produces M outputs. Its gradient function 'g', which is a
// function taking N + M inputs and produces N outputs.
//
// I.e. if we have
//    (y1, y2, ..., y_M) = f(x1, x2, ..., x_N),
// then, g is
//    (dL/dx1, dL/dx2, ..., dL/dx_N) = g(x1, x2, ..., x_N,
//                                      dL/dy1, dL/dy2, ..., dL/dy_M),
// where L is a scalar-value function of (x1, x2, ..., xN) (e.g., the
// loss function). dL/dx_i is the partial derivative of L with respect
// to x_i.
type GradientDef struct {
	FunctionName string `protobuf:"bytes,1,opt,name=function_name,json=functionName,proto3" json:"function_name,omitempty"`
	GradientFunc string `protobuf:"bytes,2,opt,name=gradient_func,json=gradientFunc,proto3" json:"gradient_func,omitempty"`
}

func (m *GradientDef) Reset()                    { *m = GradientDef{} }
func (m *GradientDef) String() string            { return proto.CompactTextString(m) }
func (*GradientDef) ProtoMessage()               {}
func (*GradientDef) Descriptor() ([]byte, []int) { return fileDescriptorFunction, []int{2} }

func (m *GradientDef) GetFunctionName() string {
	if m != nil {
		return m.FunctionName
	}
	return ""
}

func (m *GradientDef) GetGradientFunc() string {
	if m != nil {
		return m.GradientFunc
	}
	return ""
}

func init() {
	proto.RegisterType((*FunctionDefLibrary)(nil), "tensorflow.FunctionDefLibrary")
	proto.RegisterType((*FunctionDef)(nil), "tensorflow.FunctionDef")
	proto.RegisterType((*GradientDef)(nil), "tensorflow.GradientDef")
}

func init() { proto.RegisterFile("tensorflow/core/framework/function.proto", fileDescriptorFunction) }

var fileDescriptorFunction = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xcf, 0xeb, 0xd3, 0x30,
	0x18, 0xc6, 0x69, 0xbb, 0xe9, 0xfa, 0x76, 0x8a, 0x46, 0xc5, 0xd0, 0xd3, 0x9c, 0x20, 0x43, 0xa1,
	0x85, 0x0d, 0x45, 0x04, 0x0f, 0x0e, 0x7f, 0x5c, 0x64, 0x8e, 0x1e, 0x14, 0xbc, 0x94, 0x6c, 0x4d,
	0x6b, 0xd9, 0x9a, 0x8c, 0x2c, 0x75, 0xec, 0xe2, 0xff, 0xea, 0x7f, 0xe1, 0x51, 0x92, 0x36, 0x6b,
	0xd0, 0xf5, 0x7b, 0x0b, 0xc9, 0xe7, 0x79, 0x9e, 0x37, 0xef, 0xfb, 0xc2, 0x4c, 0x52, 0x76, 0xe4,
	0x22, 0xdf, 0xf3, 0x53, 0xbc, 0xe5, 0x82, 0xc6, 0xb9, 0x20, 0x15, 0x3d, 0x71, 0xb1, 0x8b, 0xf3,
	0x9a, 0x6d, 0x65, 0xc9, 0x59, 0x74, 0x10, 0x5c, 0x72, 0x04, 0x1d, 0x19, 0x3e, 0xef, 0x57, 0x11,
	0x29, 0x45, 0xfa, 0x93, 0xec, 0x6b, 0xda, 0xe8, 0xc2, 0x1b, 0x12, 0x18, 0xcf, 0x68, 0x9a, 0xd1,
	0xbc, 0x25, 0x9f, 0xf5, 0x93, 0xfc, 0xd0, 0x71, 0xd3, 0x5f, 0x80, 0x3e, 0xb6, 0xb5, 0xbd, 0xa7,
	0xf9, 0xe7, 0x72, 0x23, 0x88, 0x38, 0xa3, 0x05, 0x8c, 0x4c, 0xc5, 0xd8, 0x99, 0x78, 0xb3, 0x60,
	0xfe, 0x38, 0xea, 0x0c, 0x23, 0x4b, 0x91, 0x5c, 0x40, 0x25, 0x2a, 0x04, 0xc9, 0x4a, 0xca, 0x24,
	0x76, 0xff, 0x17, 0x7d, 0x6a, 0xdf, 0xb4, 0xc8, 0x80, 0xd3, 0xdf, 0x2e, 0x04, 0x96, 0x1d, 0x8a,
	0xc1, 0x3f, 0x96, 0x05, 0x23, 0xb2, 0x16, 0x14, 0x3b, 0x13, 0x67, 0x16, 0xcc, 0xef, 0xdb, 0x2e,
	0x5f, 0x0e, 0x4a, 0xdf, 0x31, 0xe8, 0x25, 0x0c, 0x54, 0x9b, 0xf0, 0x50, 0x27, 0x3e, 0xe9, 0x29,
	0x33, 0x7a, 0x27, 0xa5, 0xf8, 0xc0, 0xa4, 0x38, 0x27, 0x1a, 0x47, 0x11, 0x8c, 0x4c, 0xc7, 0xb0,
	0xa7, 0xa5, 0x0f, 0x6c, 0xe9, 0x8a, 0x67, 0x54, 0x05, 0xdd, 0x66, 0xcd, 0x01, 0xcd, 0xc1, 0x13,
	0x54, 0xe2, 0x81, 0x46, 0x27, 0x7d, 0x29, 0x09, 0x95, 0x4d, 0x88, 0x82, 0xc3, 0x15, 0xf8, 0x97,
	0x58, 0x74, 0x0f, 0xbc, 0x1d, 0x3d, 0xeb, 0x2f, 0xf9, 0x89, 0x3a, 0xa2, 0x17, 0x30, 0xd4, 0xb3,
	0xc5, 0xae, 0xfe, 0xe6, 0x23, 0xdb, 0x54, 0xe9, 0xbe, 0xaa, 0xc7, 0xa4, 0x61, 0xde, 0xb8, 0xaf,
	0x9d, 0xf0, 0x15, 0x8c, 0x4c, 0xc0, 0x15, 0xbb, 0x87, 0xb6, 0x9d, 0x6f, 0xe9, 0xa6, 0xdf, 0x20,
	0xb0, 0x9a, 0x8f, 0x9e, 0xc2, 0x1d, 0x33, 0xb3, 0x94, 0x91, 0x8a, 0xb6, 0x26, 0x63, 0x73, 0xb9,
	0x22, 0x15, 0x55, 0x90, 0x99, 0x51, 0xaa, 0x1e, 0x5a, 0xd7, 0xb1, 0xb9, 0x54, 0xbf, 0x5e, 0x32,
	0xc0, 0x5c, 0x14, 0x76, 0xdd, 0x97, 0x2d, 0x5b, 0xde, 0x35, 0x7d, 0x59, 0xab, 0x3d, 0x3b, 0xae,
	0x9d, 0xef, 0x6f, 0x8b, 0x52, 0xfe, 0xa8, 0x37, 0xd1, 0x96, 0x57, 0xb1, 0xb5, 0x9d, 0xd7, 0x8f,
	0x05, 0xff, 0x67, 0x6d, 0xff, 0x38, 0xce, 0xe6, 0x96, 0xde, 0xd9, 0xc5, 0xdf, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x80, 0x3c, 0x53, 0xbe, 0x69, 0x03, 0x00, 0x00,
}
